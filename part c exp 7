import java.sql.*;
import java.util.*;

class Student {
private int studentID;
private String name;
private String department;
private double marks;

```
public Student(int studentID, String name, String department, double marks) {
    this.studentID = studentID;
    this.name = name;
    this.department = department;
    this.marks = marks;
}

public int getStudentID() { return studentID; }
public String getName() { return name; }
public String getDepartment() { return department; }
public double getMarks() { return marks; }
```

}

class StudentDAO {
private Connection con;

```
public StudentDAO() throws Exception {
    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb", "root", "yourpassword");
}

public void addStudent(Student s) throws SQLException {
    String sql = "INSERT INTO Student VALUES (?, ?, ?, ?)";
    try (PreparedStatement ps = con.prepareStatement(sql)) {
        ps.setInt(1, s.getStudentID());
        ps.setString(2, s.getName());
        ps.setString(3, s.getDepartment());
        ps.setDouble(4, s.getMarks());
        ps.executeUpdate();
        System.out.println("Student added successfully!");
    }
}

public List<Student> getAllStudents() throws SQLException {
    List<Student> list = new ArrayList<>();
    Statement stmt = con.createStatement();
    ResultSet rs = stmt.executeQuery("SELECT * FROM Student");
    while (rs.next()) {
        list.add(new Student(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getDouble(4)));
    }
    return list;
}

public void updateStudent(int id, double marks) throws SQLException {
    String sql = "UPDATE Student SET Marks=? WHERE StudentID=?";
    try (PreparedStatement ps = con.prepareStatement(sql)) {
        ps.setDouble(1, marks);
        ps.setInt(2, id);
        int rows = ps.executeUpdate();
        System.out.println(rows > 0 ? "Updated successfully!" : "Student not found!");
    }
}

public void deleteStudent(int id) throws SQLException {
    String sql = "DELETE FROM Student WHERE StudentID=?";
    try (PreparedStatement ps = con.prepareStatement(sql)) {
        ps.setInt(1, id);
        int rows = ps.executeUpdate();
        System.out.println(rows > 0 ? "Deleted successfully!" : "Student not found!");
    }
}
```

}

public class StudentApp {
public static void main(String[] args) {
try {
StudentDAO dao = new StudentDAO();
Scanner sc = new Scanner(System.in);
while (true) {
System.out.println("\n=== Student Management ===");
System.out.println("1. Add Student");
System.out.println("2. View All Students");
System.out.println("3. Update Marks");
System.out.println("4. Delete Student");
System.out.println("5. Exit");
System.out.print("Enter choice: ");
int choice = sc.nextInt();
switch (choice) {
case 1:
System.out.print("Enter ID: ");
int id = sc.nextInt();
System.out.print("Enter Name: ");
String name = sc.next();
System.out.print("Enter Department: ");
String dept = sc.next();
System.out.print("Enter Marks: ");
double marks = sc.nextDouble();
dao.addStudent(new Student(id, name, dept, marks));
break;
case 2:
for (Student s : dao.getAllStudents())
System.out.println(s.getStudentID() + " " + s.getName() + " " + s.getDepartment() + " " + s.getMarks());
break;
case 3:
System.out.print("Enter ID to update: ");
int sid = sc.nextInt();
System.out.print("Enter new Marks: ");
double newMarks = sc.nextDouble();
dao.updateStudent(sid, newMarks);
break;
case 4:
System.out.print("Enter ID to delete: ");
int did = sc.nextInt();
dao.deleteStudent(did);
break;
case 5:
sc.close();
System.exit(0);
}
}
} catch (Exception e) {
e.printStackTrace();
}
}
}
